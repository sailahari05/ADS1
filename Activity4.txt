Module 3 - Analysis of Algorithms
Activity4

Submit in a word document or in a text file

 Give the order of growth (as a function of N ) of the running times of each of the following code fragments:

Note: use the following Notations for writing Answers: N, 1, log(N), N^2, N*log(N), 2^N, N^3, log(N)





Code-1:     int count = 0;

            for(int i = 0; i < N; i++){

                count++;

            }

           Order of growth : N


Code-2:int sum = 0;

            if(sum == 0){

                sum++;

			}
			Order of growth : 1


Code-3:     for(int i = N; i > 0; i < N/2)
		{

            int sum = 0;

		}

		Order of growth : log N


           Code-4:           for(int i = 0; i < N; i++){

                for(int j = 0; j < N; j++){

                    System.out.println(“Hello”);

                }

            }
			Order of growth : N^2
        


          Code-5:     for(int i = 0; i < N; i++){

                for(int j = 0; j < N; j = j * 2){

                    System.out.println(“Hello”);

                }

            }

          Order of growth : N^2


          Code-6:     public int fibonacci(int number) {

 if (number <= 1) {

                       return number;

                 } else {

                           return fibonacci(number - 1) + fibonacci(number - 2);

                 }

}
		Order of growth : N & 1


